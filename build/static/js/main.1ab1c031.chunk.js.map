{"version":3,"sources":["components/Header.js","views/auth/Login.js","views/auth/Signup.js","views/auth/Logout.js","services/ProjectService.js","services/UserService.js","services/IssueService.js","components/Project.js","views/app/CreateProjectPopup.js","views/app/Dashboard.js","components/Issue.js","views/app/CreateIssue.js","views/app/IssueView.js","components/CompletedIssue.js","views/app/CompletedIssueView.js","App.js","index.js"],"names":["Header","useState","isAuth","setIsAuth","useEffect","localStorage","getItem","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","id","Login","username","setUsername","password","setPassword","errors","setErrors","loading","setLoading","window","location","replace","onSubmit","e","preventDefault","user","fetch","method","headers","body","JSON","stringify","then","res","json","data","key","clear","setItem","htmlFor","name","value","required","onChange","target","Signup","password1","setPassword1","password2","setPassword2","console","log","Logout","onClick","Authorization","BASE_URL","axios","get","response","newProject","post","delete","config","newIssue","updatedIssue","put","Project","project","removeName","projectIssues","issues","filter","issue","pk","completed","pathname","project_name","length","CreateProjectPopup","toggle","addProject","handleProjectChange","Dashboard","projects","setProjects","setUser","createProjectState","setCreateProjectState","setIssues","setNewProject","issueService","allIssues","userService","curUser","projectService","allProjects","toggleCreateProjectState","confirm","returnedProjects","projectsToShow","map","projectObject","returnedProject","concat","Issue","removeIssue","completeIssue","toggleInProgress","issue_text","issue_type","priority","date_posted","aria-haspopup","in_progress","aria-labelledby","CreateIssue","addIssue","handleIssueChange","handlePriorityChange","handleTypeChange","IssueView","setNewIssue","setType","setPriority","createIssueState","setCreateIssueState","useParams","userId","projectName","projectId","projectIdInt","parseInt","returnedIssues","issuesToShow","find","i","parsedDate","moment","changedIssue","date_completed","Date","returnedIssue","newState","toggleCreateIssueState","data-sortable","issueObject","CompletedIssueView","initialIssues","CompletedIssue","defaults","xsrfCookieName","xsrfHeaderName","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ab1c031.chunk.js","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n  const [isAuth, setIsAuth] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem('token') !== null) {\r\n      setIsAuth(true);\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className='header'>\r\n      <nav className='navbar navbar-expand-lg navbar-dark bg-primary'>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <Link to='/dashboard' className='navbar-brand'>Django/React Issue Tracker</Link>\r\n        <div id='navbarNav' className='collapse navbar-collapse'>\r\n          <div className='navbar-nav'>\r\n            {isAuth === true ? (\r\n              <>\r\n                <Link to='/dashboard' className='nav-item nav-link'>Dashboard</Link>\r\n                <Link to='/logout' className='nav-item nav-link'>Logout</Link>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Link to='/login' className='nav-item nav-link'>Login</Link>\r\n                <Link to='/signup' className='nav-itme nav-link'>Signup</Link>\r\n              </>\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;","import React, { useState, useEffect } from 'react'\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errors, setErrors] = useState(false)\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem('token') !== null) {\r\n      window.location.replace('http://localhost:3000/dashboard')\r\n    } else {\r\n      setLoading(false)\r\n    }\r\n  }, [])\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    fetch('http://127.0.0.1:8000/api/v1/issue_tracker/auth/login/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(user)\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.key) {\r\n          localStorage.clear()\r\n          localStorage.setItem('token', data.key)\r\n          window.location.replace('http://localhost:3000/dashboard')\r\n        } else {\r\n          setUsername('')\r\n          setPassword('')\r\n          localStorage.clear();\r\n          setErrors(true)\r\n        }\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className='login'>\r\n\r\n      {loading === false && <h1 className='login-header'>Login</h1>}\r\n      {errors === true && <p className='login-input alert alert-danger'>Cannot log in with provided credentials</p>}\r\n      {loading === false && (\r\n        <form className='login-input' onSubmit={onSubmit}>\r\n          <label className='login-input' htmlFor='username'>Username:</label> <br />\r\n          <input\r\n            className='login-input form-control'\r\n            name='username'\r\n            type='username'\r\n            value={username}\r\n            required\r\n            onChange={e => setUsername(e.target.value)}\r\n          />{' '}\r\n          <br />\r\n          <label className='login-input' htmlFor='password'>Password:</label> <br />\r\n          <input\r\n            className='login-input form-control'\r\n            name='pasword'\r\n            type='password'\r\n            value={password}\r\n            required\r\n            onChange={e => setPassword(e.target.value)}\r\n          />{' '}\r\n          <br />\r\n          <input className='login-input btn btn-primary' type='submit' value='Login' />\r\n        </form>\r\n      )}\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login","import React, { useState, useEffect } from 'react';\r\n\r\nconst Signup = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password1, setPassword1] = useState('');\r\n  const [password2, setPassword2] = useState('');\r\n  const [errors, setErrors] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem('token') !== null) {\r\n      window.location.replace('http://localhost:3000/dashboard');\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      username: username,\r\n      password1: password1,\r\n      password2: password2\r\n    };\r\n\r\n    fetch('http://127.0.0.1:8000/api/v1/issue_tracker/auth/register/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(user)\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data)\r\n        if (data.key) {\r\n          localStorage.clear();\r\n          localStorage.setItem('token', data.key);\r\n          window.location.replace('http://localhost:3000/dashboard');\r\n        } else {\r\n          setUsername('');\r\n          setPassword1('');\r\n          setPassword2('');\r\n          localStorage.clear();\r\n          setErrors(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className='login'>\r\n      {loading === false && <h1 className='login-header'>Signup</h1>}\r\n      {errors === true && <h2>Cannot signup with provided credentials</h2>}\r\n      <form className='login-input' onSubmit={onSubmit}>\r\n        <label htmlFor='username'>Username:</label> <br />\r\n        <input\r\n          className='login-input form-control'\r\n          name='username'\r\n          type='username'\r\n          value={username}\r\n          onChange={e => setUsername(e.target.value)}\r\n          required\r\n        />{' '}\r\n        <br />\r\n        <label htmlFor='password1'>Password:</label> <br />\r\n        <input\r\n          className='login-input form-control'\r\n          name='password1'\r\n          type='password'\r\n          value={password1}\r\n          onChange={e => setPassword1(e.target.value)}\r\n          required\r\n        />{' '}\r\n        <br />\r\n        <label htmlFor='password2'>Confirm password:</label> <br />\r\n        <input\r\n          className='login-input form-control'\r\n          name='password2'\r\n          type='password'\r\n          value={password2}\r\n          onChange={e => setPassword2(e.target.value)}\r\n          required\r\n        />{' '}\r\n        <br />\r\n        <input className='btn btn-primary login-input' type='submit' value='Signup' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Logout = () => {\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem('token') === null) {\r\n      window.location.replace('http://localhost:3000/login')\r\n    } else {\r\n      setLoading(false)\r\n    }\r\n  }, [])\r\n\r\n  const handleLogout = e => {\r\n    e.preventDefault()\r\n\r\n    fetch('http://127.0.0.1:8000/api/v1/issue_tracker/auth/logout/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Token ${localStorage.getItem('token')}`\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data)\r\n        localStorage.clear()\r\n        window.location.replace('http://localhost:3000/login')\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className='logout-content'>\r\n      {loading === false && (\r\n        <>\r\n          <h1>Are you sure you want to logout?</h1>\r\n          <input className='btn btn-danger' type='button' value='Logout' onClick={handleLogout} />\r\n          <Link className='btn btn-secondary' to='/dashboard'>Cancel</Link>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Logout","import axios from 'axios'\r\n\r\nconst BASE_URL = 'http://127.0.0.1:8000/api/projects/'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(BASE_URL)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst getAllForUser = id => {\r\n  const request = axios.get(BASE_URL)\r\n  const data = request.then(response => response.data)\r\n  return data.map(project => project.user === id)\r\n}\r\n\r\nconst createProject = newProject => {\r\n  const request = axios.post(BASE_URL, newProject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteProject = id => {\r\n  const request = axios.delete(`${BASE_URL}${id}/`)\r\n  return request\r\n}\r\n\r\nexport default { getAll, createProject, getAllForUser, deleteProject }\r\n\r\n","import axios from 'axios'\r\n\r\nconst BASE_URL = 'http://127.0.0.1:8000/api/v1/issue_tracker/auth/user/'\r\n\r\nconst config = {\r\n  headers: {\r\n    Authorization: `Token ${localStorage.getItem('token')}`\r\n  }\r\n}\r\n\r\nconst getUser = () => {\r\n  const request = axios.get(BASE_URL, config)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getUser }","import axios from 'axios'\r\n\r\nconst BASE_URL = 'http://127.0.0.1:8000/api/issues/'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(BASE_URL)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst createIssue = newIssue => {\r\n  const request = axios.post(BASE_URL, newIssue)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteIssue = id => {\r\n  const request = axios.delete(`${BASE_URL}${id}/`)\r\n  return request\r\n}\r\n\r\nconst updateIssue = (id, updatedIssue) => {\r\n  const request = axios.put(`${BASE_URL}${id}/`, updatedIssue)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, createIssue, deleteIssue, updateIssue }\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Project = ({ project, removeName, issues }) => {\r\n  \r\n  const projectIssues = issues.filter(issue => issue.project === project.pk && issue.completed === false)\r\n  \r\n  return (\r\n    <tr>\r\n      <td className='project'>\r\n        <Link to={{ pathname: `${project.user}/${project.project_name}/${project.pk}` }}>{project.project_name}</Link>\r\n      </td>\r\n      <td className='issue-number'>\r\n        {projectIssues.length}\r\n      </td>\r\n      <td>\r\n        <button className='btn btn-danger' onClick={(() => removeName(project.pk))}>Delete</button>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default Project","import React from 'react'\r\n\r\n\r\nconst CreateProjectPopup = ({ toggle, newProject, addProject, handleProjectChange }) => {\r\n\r\n  return (\r\n    <div className='modal'>\r\n      <div className='modal_content'>\r\n        <form onSubmit={addProject}>\r\n          <span className='close' onClick={toggle}>&times;</span>\r\n          <h2>Create a New Project</h2>\r\n          <div className='row'>\r\n            <div className='col-lg-9'>\r\n              <input className='form-control' value={newProject} onChange={handleProjectChange} />\r\n            </div>\r\n            <div className='col-lg-3'>\r\n              <input className='form-control btn btn-success' type='submit' name='submit' value='Save Project' />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateProjectPopup","import React, { useState, useEffect } from 'react'\r\n\r\n\r\nimport projectService from '../../services/ProjectService.js'\r\nimport userService from '../../services/UserService.js'\r\nimport issueService from '../../services/IssueService.js'\r\nimport Project from '../../components/Project.js'\r\nimport CreateProjectPopup from './CreateProjectPopup.js'\r\n\r\n\r\nconst Dashboard = () => {\r\n  const [projects, setProjects] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [user, setUser] = useState(null)\r\n  const [createProjectState, setCreateProjectState] = useState(false)\r\n  const [issues, setIssues] = useState([])\r\n  const [newProject, setNewProject] = useState('')\r\n\r\n  const addProject = e => {\r\n    e.preventDefault()\r\n    const projectObject = {\r\n      project_name: newProject,\r\n      user: user.pk\r\n    }\r\n\r\n    projectService\r\n      .createProject(projectObject)\r\n      .then(returnedProject => {\r\n        setProjects(projects.concat(returnedProject))\r\n        setNewProject('')\r\n      }\r\n    )\r\n    toggleCreateProjectState()\r\n  }\r\n\r\n  const handleProjectChange = e => {\r\n    setNewProject(e.target.value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    issueService\r\n      .getAll()\r\n      .then(allIssues => {\r\n        setIssues(allIssues)\r\n      })\r\n  }, [])\r\n    \r\n  useEffect(() => {\r\n    if (localStorage.getItem('token') === null) {\r\n      window.location.replace('http://localhost:3000/login')\r\n    } else {\r\n      userService\r\n        .getUser()\r\n        .then(curUser => {\r\n          setUser(curUser)\r\n          setLoading(false)\r\n        })\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    projectService\r\n      .getAll()\r\n      .then(allProjects => setProjects(allProjects))\r\n  }, [user])\r\n\r\n  const toggleCreateProjectState = () => {\r\n    setCreateProjectState(!createProjectState)\r\n  }\r\n\r\n  const removeName = id => {\r\n    if (window.confirm(\"Are you sure you wish to delete this projecct?\")) {\r\n      projectService\r\n        .deleteProject(id)\r\n        .then(returnedProjects =>\r\n          setProjects(projects.filter(project => project.pk !== id)))\r\n    }\r\n  }\r\n\r\n  const projectsToShow = loading\r\n    ? {}\r\n    : projects.filter(project => project.user === user.pk)\r\n\r\n\r\n  return (\r\n    <div className='page-content'>\r\n      {loading === false && (\r\n        <>\r\n          <h1 className='page-title'>Dashboard</h1>\r\n          <h2>Hello {user.username}!</h2>\r\n          <button className='btn btn-primary' onClick={toggleCreateProjectState}>New Project</button>\r\n          <table className='table table-hover'>\r\n            <thead>\r\n              <tr className='table-primary well well-sm'>\r\n                <th>Project</th>\r\n                <th># of Issues</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {projectsToShow.map(project =>\r\n                <Project\r\n                  project={project}\r\n                  key={project.project_name}\r\n                  username={user.username}\r\n                  removeName={removeName}\r\n                  issues={issues}\r\n                />\r\n              )}\r\n            </tbody>\r\n          </table>\r\n          {createProjectState ? <CreateProjectPopup\r\n            toggle={toggleCreateProjectState}\r\n            newProject={newProject}\r\n            addProject={addProject}\r\n            handleProjectChange={handleProjectChange} /> : null}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard","import React from 'react'\r\n\r\nconst Issue = ({ issue, removeIssue, completeIssue, toggleInProgress }) => {\r\n  return (\r\n    <tr>\r\n      <td><strong>{issue.pk}</strong></td>\r\n      <td>{issue.issue_text}</td>\r\n      <td>{issue.issue_type}</td>\r\n      <td>{issue.priority}</td>\r\n      <td>{issue.date_posted}</td>\r\n      <td>\r\n        <div className='dropdown'>\r\n          <button\r\n            type='button'\r\n            className='btn btn-info dropdown-toggle'\r\n            data-toggle='dropdown'\r\n            aria-haspopup='true'\r\n            aria-expanded='false'\r\n          >\r\n            {issue.in_progress === true ? 'In Progress' : 'Not Started'}\r\n          </button>\r\n          <ul className='dropdown-menu' aria-labelledby=\"dropdownMenuButton1\" >\r\n            <li><button className='dropdown-item' onClick={(() => toggleInProgress(issue.pk, true))}>In Progress</button></li>\r\n            <li><button className='dropdown-item' onClick={(() => toggleInProgress(issue.pk, false))}>Not Started</button></li>\r\n          </ul>\r\n        </div>\r\n      </td>\r\n      <td>\r\n        <button className='btn btn-success' onClick={(() => completeIssue(issue.pk))}>Mark Complete</button>\r\n        <button className='btn btn-danger' onClick={(() => removeIssue(issue.pk))}>Delete</button>\r\n      </td>\r\n    </tr>\r\n    )\r\n}\r\n\r\nexport default Issue","\r\n\r\nconst CreateIssue = ({ newIssue, type, priority, addIssue, handleIssueChange, handlePriorityChange, handleTypeChange, toggle }) => {\r\n  return (\r\n    <div className='modal'>\r\n      <div className='modal_content'>\r\n        <form className='form-group' onSubmit={addIssue}>\r\n          <span className='close' onClick={toggle}>&times;</span>\r\n          <h2>Create a New Issue</h2>\r\n          <div className='row align-items-center'>\r\n            <div className='col-lg-6'>\r\n              <label htmlFor='issue-text' className='form-label'>Describe the issue.</label>\r\n              <textarea id='issue-text' className='form-control' value={newIssue} onChange={handleIssueChange} />\r\n            </div>\r\n            <div className='col-lg-2'>\r\n              <label htmlFor='type-select' className='form-label'>Type</label>\r\n              <select id='type-select' className='form-control' name='type' value={type} onChange={handleTypeChange}>\r\n                <option value='Bug'>Bug</option>\r\n                <option value='Feature'>Feature</option>\r\n              </select>\r\n            </div>\r\n            <div className='col-lg-2'>\r\n              <label htmlFor='priority-select' className='form-label'>Priority</label>\r\n              <select id='priority-select' className='form-control' name='priority' value={priority} onChange={handlePriorityChange}>\r\n                <option value='Low'>Low</option>\r\n                <option value='Medium'>Medium</option>\r\n                <option value='High'>High</option>\r\n                <option value='Critical'>Critical</option>\r\n              </select>\r\n            </div>\r\n            <div className='col-lg-2'>\r\n              <input className='form-control btn btn-success' type='submit' name='submit' value='Save Issue' />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateIssue","import moment from 'moment'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport Issue from '../../components/Issue.js'\r\nimport CreateIssue from './CreateIssue.js'\r\nimport issueService from '../../services/IssueService.js'\r\n\r\nconst IssueView = () => {\r\n  const [issues, setIssues] = useState([])\r\n  const [newIssue, setNewIssue] = useState('')\r\n  const [type, setType] = useState('Bug')\r\n  const [priority, setPriority] = useState('Low')\r\n  const [createIssueState, setCreateIssueState] = useState(false)\r\n\r\n  const { userId, projectName, projectId } = useParams()\r\n\r\n  const projectIdInt = parseInt(projectId)\r\n\r\n  useEffect(() => {\r\n    issueService\r\n      .getAll()\r\n      .then(returnedIssues => {\r\n        setIssues(returnedIssues)\r\n      })\r\n  }, [])\r\n\r\n  const handleIssueChange = e => {\r\n    setNewIssue(e.target.value)\r\n  }\r\n\r\n  const handleTypeChange = e => {\r\n    setType(e.target.value)\r\n  }\r\n\r\n  const handlePriorityChange = e => {\r\n    setPriority(e.target.value)\r\n  }\r\n\r\n  const addIssue = e => {\r\n    e.preventDefault()\r\n    const issueObject = {\r\n      user: userId,\r\n      issue_text: newIssue,\r\n      project: projectId,\r\n      priority: priority,\r\n      issue_type: type,\r\n      date_posted: new Date(),\r\n      date_completed: null,\r\n      in_progress: false,\r\n      completed: false\r\n    }\r\n\r\n    issueService\r\n      .createIssue(issueObject)\r\n      .then(returnedIssue => {\r\n        setIssues(issues.concat(returnedIssue))\r\n        setNewIssue('')\r\n      })\r\n\r\n    toggleCreateIssueState()\r\n  }\r\n\r\n  const removeIssue = id => {\r\n    if (window.confirm('Are you sure you want to delete this issue?')) {\r\n      issueService\r\n        .deleteIssue(id)\r\n        .then(returnedIssues => {\r\n          setIssues(issues.filter(issue => issue.pk !== id))\r\n        })\r\n    }\r\n  }\r\n\r\n  const completeIssue = id => {\r\n    const issue = issuesToShow.find(i => i.pk === id)\r\n    const parsedDate = moment(issue.date_posted)\r\n    const changedIssue = {\r\n      ...issue,\r\n      completed: true,\r\n      date_posted: parsedDate,\r\n      date_completed: new Date()\r\n    }\r\n\r\n    issueService\r\n      .updateIssue(id, changedIssue)\r\n      .then(returnedIssue => {\r\n        setIssues(issues.map(issue => issue.pk !== id ? issue : returnedIssue))\r\n      }\r\n    )\r\n  }\r\n\r\n  const toggleInProgress = (id, newState) => {\r\n    const issue = issuesToShow.find(i => i.pk === id)\r\n    const parsedDate = moment(issue.date_posted)\r\n    const changedIssue = {\r\n      ...issue,\r\n      date_posted: parsedDate,\r\n      in_progress: newState\r\n    }\r\n\r\n    issueService\r\n      .updateIssue(id, changedIssue)\r\n      .then(returnedIssue => {\r\n        setIssues(issues.map(issue => issue.pk !== id ? issue : returnedIssue))\r\n      }\r\n      )\r\n  }\r\n\r\n  const toggleCreateIssueState = () => {\r\n    setCreateIssueState(!createIssueState)\r\n  }\r\n\r\n  const issuesToShow = issues.filter(issue => issue.project === projectIdInt && issue.completed === false)\r\n\r\n  return (\r\n    <div className='page-content'>\r\n      <h1 className='page-title'>{projectName}</h1>\r\n      <button className='btn btn-primary' onClick={toggleCreateIssueState}>New Issue</button>\r\n      <Link to={{ pathname: `/${userId}/${projectName}/${projectId}/completed` }} className='btn btn-primary'>View Completed Issues</Link>\r\n      {issuesToShow.length > 0 ? (\r\n        <table className='table table-hover'>\r\n          <thead>\r\n            <tr className='table-primary well well-sm'>\r\n              <th>#</th>\r\n              <th>Issue</th>\r\n              <th>Type</th>\r\n              <th data-sortable='true'>Priority</th>\r\n              <th>Date Posted</th>\r\n              <th>Status</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n        \r\n          <tbody>\r\n            {issuesToShow.map(issue =>\r\n              <Issue\r\n                issue={issue}\r\n                key={issue.pk}\r\n                removeIssue={removeIssue}\r\n                completeIssue={completeIssue}\r\n                toggleInProgress={toggleInProgress}\r\n              />\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n          <>\r\n          <table className='table table-hover'>\r\n            <thead>\r\n              <tr className='table-primary well well-sm'>\r\n                <th>#</th>\r\n                <th>Issue</th>\r\n                <th>Type</th>\r\n                <th data-sortable='true'>Priority</th>\r\n                <th>Date Posted</th>\r\n                <th>Status</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n          <p>No issues yet to show. Create a new issue by clicking the 'New Issue' button above!</p>\r\n          </>\r\n        )}\r\n      {createIssueState ? <CreateIssue\r\n        toggle={toggleCreateIssueState}\r\n        newIssue={newIssue}\r\n        type={type}\r\n        priority={priority}\r\n        addIssue={addIssue}\r\n        handleIssueChange={handleIssueChange}\r\n        handlePriorityChange={handlePriorityChange}\r\n        handleTypeChange={handleTypeChange} /> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IssueView","import React from 'react'\r\n\r\nconst Issue = ({ issue, removeIssue }) => {\r\n  return (\r\n    <tr>\r\n      <td>{issue.issue_text}</td>\r\n      <td>{issue.issue_type}</td>\r\n      <td>{issue.priority}</td>\r\n      <td>{issue.date_posted}</td>\r\n      <td>{issue.date_completed}</td>\r\n      <td className='table-success'>\r\n        Complete\r\n      </td>\r\n      <td>\r\n        <button className='btn btn-danger' onClick={(() => removeIssue(issue.pk))}>Delete</button>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default Issue","import React, { useState, useEffect } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport CompletedIssue from '../../components/CompletedIssue.js'\r\nimport issueService from '../../services/IssueService.js'\r\n\r\nconst CompletedIssueView = () => {\r\n  const [issues, setIssues] = useState([])\r\n\r\n  const { userId, projectName, projectId } = useParams()\r\n\r\n  const projectIdInt = parseInt(projectId)\r\n\r\n  useEffect(() => {\r\n    issueService\r\n      .getAll()\r\n      .then(initialIssues => {\r\n        setIssues(initialIssues)\r\n      })\r\n  }, [])\r\n\r\n  const removeIssue = id => {\r\n    if (window.confirm('Are you sure you want to delete this issue?')) {\r\n      issueService\r\n        .deleteIssue(id)\r\n        .then(returnedIssues => {\r\n          setIssues(issues.filter(issue => issue.pk !== id))\r\n        })\r\n    }\r\n  }\r\n\r\n  const issuesToShow = issues.filter(issue => issue.project === projectIdInt && issue.completed === true)\r\n\r\n  return (\r\n    <div className='page-content'>\r\n      <h1 className='page-title'>\r\n        {projectName}\r\n        <small className='text-muted'> Completed Issues</small>\r\n      </h1>\r\n      <Link to={{ pathname: `/${userId}/${projectName}/${projectId}/` }} className='btn btn-primary'>Back to Issues</Link>\r\n      <table className='table table-hover'>\r\n        <thead>\r\n          <tr className='table-primary well well-sm'>\r\n            <th>Issue</th>\r\n            <th>Type</th>\r\n            <th>Priority</th>\r\n            <th>Date Posted</th>\r\n            <th>Date Completed</th>\r\n            <th>Status</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {issuesToShow.map(issue =>\r\n            <CompletedIssue\r\n              issue={issue}\r\n              key={issue.pk}\r\n              removeIssue={removeIssue}\r\n            />\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CompletedIssueView","import './App.css';\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Header from './components/Header.js';\r\nimport Login from './views/auth/Login.js'\r\nimport Signup from './views/auth/Signup.js'\r\nimport Logout from './views/auth/Logout.js'\r\nimport Dashboard from './views/app/Dashboard.js'\r\nimport IssueView from './views/app/IssueView.js'\r\nimport CompletedIssueView from './views/app/CompletedIssueView';\r\n\r\nimport axios from 'axios'\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken'\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <div className='App'>\r\n      <Router>\r\n        <Header />\r\n        <Switch>\r\n          <Route path='/' component={Dashboard} exact />\r\n          <Route path='/login' component={Login} exact />\r\n          <Route path='/signup' component={Signup} exact />\r\n          <Route path='/logout' component={Logout} exact />\r\n          <Route path='/dashboard' component={Dashboard} exact />\r\n          <Route path='/:userId/:projectName/:projectId' component={IssueView} exact />\r\n          <Route path='/:userId/:projectName/:projectId/completed' component={CompletedIssueView} exact />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}